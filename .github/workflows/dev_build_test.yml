name: Build & run tests (dev)

on:
  pull_request:
    branches: [ dev ]
    
jobs:

  frontend-develop:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2.2.0
      with:
        fetch-depth: 0

    - name: Install node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16

    - name: Install dependencies
      run: |
        cd $PWD/TokanPages.ClientApp
        npm install --global yarn
        yarn install
        yarn global add sonarqube-scanner

    - name: Test client application
      run: |
        cd $PWD/TokanPages.ClientApp
        yarn app-test --ci --coverage
        yarn sonar \
        -Dsonar.login=${{ secrets.SONARQUBE_TOKEN_FE }} \
        -Dsonar.projectKey=${{ secrets.SONARQUBE_PROJECT_KEY_FE }} \
        -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}

  backend-develop:

    runs-on: ubuntu-latest

    env:
      TARGET_DIRECTORY: $PWD/sonarqubecoverage
      COVERAGE_REPORT: $PWD/*/*/TestResults/*/coverage.cobertura.xml
      SONAR_REPORT: SonarQube.xml

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2.2.0

    - name: Variable substitution appsettings file for Testing (.NET)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/TokanPages.WebApi/appsettings.Testing.json
      env:
        Email_PrivateKey: "${{ secrets.TEST_EMAIL_PRIVATEKEY }}"
        Email_BaseUrl: "${{ secrets.TEST_EMAIL_BASEURL }}"
        Email_Address_Admin: "${{ secrets.TEST_EMAIL_ADDRESSES_ADMIN }}"
        Email_Address_Contact: "${{ secrets.TEST_EMAIL_ADDRESSES_CONTACT }}"
        Email_Address_Support: "${{ secrets.TEST_EMAIL_ADDRESSES_ITSUPPORT }}"
        Db_Connection: "${{ secrets.TEST_DBCONNECT }}"
        AZ_Storage_BaseUrl: "${{ secrets.TEST_AZSTORAGE_BASEURL }}"
        AZ_Storage_ContainerName: "${{ secrets.TEST_AZSTORAGE_CONTAINERNAME }}"
        AZ_Storage_ConnectionString: "${{ secrets.TEST_AZSTORAGE_CONNECTIONSTRING }}"
        AZ_Storage_MaxFileSizeUserMedia: "${{ secrets.TEST_AZSTORAGE_MAXFILESIZEUSERMEDIA }}"
        AZ_Storage_MaxFileSizeSingleAsset: "${{ secrets.TEST_AZSTORAGE_MAXFILESIZESINGLEASSET }}"
        AZ_Redis_InstanceName: "${{ secrets.TEST_AZREDIS_INSTANCENAME }}"
        AZ_Redis_ConnectionString: "${{ secrets.TEST_AZREDIS_CONNECTIONSTRING }}"
        AZ_Redis_ExpirationMinute: "${{ secrets.TEST_AZREDIS_EXPIRATIONMINUTE }}"
        AZ_Redis_ExpirationSecond: "${{ secrets.TEST_AZREDIS_EXPIRATIONSECOND }}"
        Paths_UpdateSubscriber: "${{ secrets.TEST_PATHS_UPDATESUBSCRIBER }}"
        Paths_Unsubscribe: "${{ secrets.TEST_PATHS_UNSUBSCRIBE }}"
        Paths_UpdatePassword: "${{ secrets.TEST_PATHS_UPDATEPASSWORD }}"
        Paths_Activation: "${{ secrets.TEST_PATHS_ACTIVATION }}"
        Paths_DevelopmentOrigin: "${{ secrets.TEST_PATHS_DEVELOPMENTORIGIN }}"
        Paths_DeploymentOrigin: "${{ secrets.TEST_PATHS_DEPLOYMENTORIGIN }}"
        Paths_Templates_Newsletter: "${{ secrets.TEST_PATHS_NEWSLETTER }}"
        Paths_Templates_ContactForm: "${{ secrets.TEST_PATHS_CONTACTFORM }}"
        Paths_Templates_ResetPassword: "${{ secrets.TEST_PATHS_RESETPASSWORD }}"
        Paths_Templates_RegisterForm: "${{ secrets.TEST_PATHS_REGISTERFORM }}"
        Ids_Issuer: "${{ secrets.TEST_IDS_ISSUER }}"
        Ids_Audience: "${{ secrets.TEST_IDS_AUDIENCE }}"
        Ids_WebSecret: "${{ secrets.TEST_IDS_WEBSECRET }}"
        Ids_RequireHttps: "${{ secrets.TEST_IDS_REQUIREHTTPS }}"
        Ids_WebToken_Maturity: "${{ secrets.TEST_IDS_WEBTOKEN_MATURITY }}"
        Ids_RefreshToken_Maturity: "${{ secrets.TEST_IDS_REFRESHTOKEN_MATURITY }}"
        Limit_Reset_Maturity: "${{ secrets.TEST_LIMITS_RESET_MATURITY }}"
        Limit_Activation_Maturity: "${{ secrets.TEST_LIMITS_ACTIVATION_MATURITY }}"
        Limit_Likes_Anonymous: "${{ secrets.TEST_LIMITS_LIKES_ANONYMOUS }}"
        Limit_Likes_User: "${{ secrets.TEST_LIMITS_LIKES_USER }}"

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: SonarQube begin scan dotnet
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool update dotnet-reportgenerator-globaltool -g
        dotnet sonarscanner begin \
        /k:${{ secrets.SONARQUBE_PROJECT_KEY_BE }} \
        /d:sonar.login=${{ secrets.SONARQUBE_TOKEN_BE }} \
        /d:sonar.host.url=${{ secrets.SONARQUBE_HOST }} \
        /d:sonar.coverageReportPaths="${{ env.TARGET_DIRECTORY }}/${{ env.SONAR_REPORT }}"

    - name: Build .NET
      run: dotnet build

    - name: Test with the dotnet CLI
      run: |
        dotnet test --no-build --collect:"XPlat Code Coverage"
        mkdir "${{ env.TARGET_DIRECTORY }}"
        reportgenerator "-reports:${{ env.COVERAGE_REPORT }}" "-targetdir:${{ env.TARGET_DIRECTORY }}" "-reporttypes:SonarQube"
      env:
        ASPNETCORE_ENVIRONMENT: Testing

    - name: SonarQube end scan dotnet
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONARQUBE_TOKEN_BE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
