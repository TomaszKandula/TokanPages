name: Build & run tests (dev)

on:
  pull_request:
    branches: [ dev ]
    
jobs:

  dev-branch-check:

    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2.2.0
      with:
        fetch-depth: 0

    - name: Install node.js
      uses: actions/setup-node@v1
      with:
        node-version: 15

    - name: Install dependencies
      run: |
        cd $PWD/TokanPages.ClientApp
        npm install --global yarn
        yarn install

    - name: Test client application
      run: |
        cd $PWD/TokanPages.ClientApp
        yarn app-test --ci --coverage
        
    - name: Variable substitution appsettings file for Staging (NET Core)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/TokanPages.Api/appsettings.Staging.json
      env:
        AppUrls.UpdateSubscriberPath: "${{ secrets.APPURLS__UPDATESUBSCRIBERPATH_STAGE }}"
        AppUrls.UnsubscribePath: "${{ secrets.APPURLS__UNSUBSCRIBEPATH_STAGE }}"
        AppUrls.DevelopmentOrigin: "${{ secrets.APPURLS__DEVELOPMENTORIGIN_STAGE }}"
        AppUrls.DeploymentOrigin: "${{ secrets.APPURLS__DEPLOYMENTORIGIN_STAGE }}"
        AzureStorage.BaseUrl: "${{ secrets.AZURESTORAGE__BASEURL_TEST }}"
        AzureStorage.ContainerName: "${{ secrets.AZURESTORAGE__CONTAINERNAME_TEST }}"
        AzureStorage.ConnectionString: "${{ secrets.AZURESTORAGE__CONNECTIONSTRING_TEST }}"
        Sentry.Dsn: "${{ secrets.SENTRY__DSN_STAGE }}"
        ConnectionStrings.DbConnect: "${{ secrets.CONNECTIONSTRINGS__DBCONNECT_STAGE }}"
        ConnectionStrings.DbConnectTest: "${{ secrets.CONNECTIONSTRINGS__DBCONNECT_TEST }}"
        SmtpServer.Account: "${{ secrets.SMTPSERVER__ACCOUNT_STAGE }}"
        SmtpServer.Password: "${{ secrets.SMTPSERVER__PASSWORD_STAGE }}"
        SmtpServer.Port: "${{ secrets.SMTPSERVER__PORT_STAGE }}"
        SmtpServer.Server: "${{ secrets.SMTPSERVER__SERVER_STAGE }}"

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: SonarQube begin scan
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin \
        /k:${{ secrets.SONARQUBE_PROJECT_KEY }} \
        /d:sonar.host.url=${{ secrets.SONARQUBE_HOST }} \
        /d:sonar.login=${{ secrets.SONARQUBE_TOKEN }}

    - name: Build .NET
      run: dotnet build

    - name: Test with the dotnet CLI
      run: dotnet test
      env:
        ASPNETCORE_ENVIRONMENT: Development

    - name: SonarQube end scan
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONARQUBE_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
