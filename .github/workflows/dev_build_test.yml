name: Build & run tests (dev)

on:
  pull_request:
    branches: [ dev ]
    
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Variable substitution appsettings file for Staging (NET Core)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/TokanPages/appsettings.Staging.json
      env:
        AzureStorage.BaseUrl: "${{ secrets.AZURESTORAGE__BASEURL_TEST }}"
        AzureStorage.ContainerName: "${{ secrets.AZURESTORAGE__CONTAINERNAME_TEST }}"
        AzureStorage.ConnectionString: "${{ secrets.AZURESTORAGE__CONNECTIONSTRING }}"
        Sentry.Dsn: "${{ secrets.SENTRY__DSN_TEST }}"
        ConnectionStrings.DbConnectTest: "${{ secrets.CONNECTIONSTRING__TEST }}"
        SmtpServer.Account: "${{ secrets.SMTPSERVER__ACCOUNT }}"
        SmtpServer.Password: "${{ secrets.SMTPSERVER__PASSWORD }}"
        SmtpServer.Port: "${{ secrets.SMTPSERVER__PORT }}"
        SmtpServer.Server: "${{ secrets.SMTPSERVER__SERVER }}"

    - name: Variable substitution appsettings file for Production (NET Core)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/TokanPages/appsettings.Production.json
      env:
        AppUrls.UpdateSubscriberPath: "${{ secrets.APPURLS__UPDATESUBSCRIBERPATH}}"
        AppUrls.UnsubscribePath: "${{ secrets.APPURLS__UNSUBSCRIBEPATH}}"
        AppUrls.DevelopmentOrigin: "${{ secrets.APPURLS__DEVELOPMENTORIGIN }}"
        AppUrls.DeploymentOrigin: "${{ secrets.APPURLS__DEPLOYMENTORIGIN }}"
        AzureStorage.BaseUrl: "${{ secrets.AZURESTORAGE__BASEURL }}"
        AzureStorage.ContainerName: "${{ secrets.AZURESTORAGE__CONTAINERNAME }}"
        AzureStorage.ConnectionString: "${{ secrets.AZURESTORAGE__CONNECTIONSTRING }}"
        Sentry.Dsn: "${{ secrets.SENTRY__DSN }}"
        ConnectionStrings.DbConnect: "${{ secrets.CONNECTIONSTRING__PROD }}"
        SmtpServer.Account: "${{ secrets.SMTPSERVER__ACCOUNT }}"
        SmtpServer.Password: "${{ secrets.SMTPSERVER__PASSWORD }}"
        SmtpServer.Port: "${{ secrets.SMTPSERVER__PORT }}"
        SmtpServer.Server: "${{ secrets.SMTPSERVER__SERVER }}"

    - name: Build and push Docker image (runs frontend & backend tests)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REGISTRY_USERNAME }}:${{ github.sha }}
