name: Build & run tests (dev)

on:
  pull_request:
    branches: [ dev ]
    
jobs:

  frontend-check:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2.2.0
      with:
        fetch-depth: 0

    - name: Install node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14

    - name: Install dependencies
      run: |
        npm install --global yarn
        yarn install

    - name: Test client application
      run: yarn app-test --ci --coverage

    - name: Scan client application
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}

  backend-check:

    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2.2.0
      with:
        fetch-depth: 0
        
    - name: Variable substitution appsettings file for Staging (NET Core)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/TokanPages/appsettings.Staging.json
      env:
        AzureStorage.BaseUrl: "${{ secrets.AZURESTORAGE__BASEURL_TEST }}"
        AzureStorage.ContainerName: "${{ secrets.AZURESTORAGE__CONTAINERNAME_TEST }}"
        AzureStorage.ConnectionString: "${{ secrets.AZURESTORAGE__CONNECTIONSTRING }}"
        Sentry.Dsn: "${{ secrets.SENTRY__DSN_TEST }}"
        ConnectionStrings.DbConnectTest: "${{ secrets.CONNECTIONSTRING__TEST }}"
        SmtpServer.Account: "${{ secrets.SMTPSERVER__ACCOUNT }}"
        SmtpServer.Password: "${{ secrets.SMTPSERVER__PASSWORD }}"
        SmtpServer.Port: "${{ secrets.SMTPSERVER__PORT }}"
        SmtpServer.Server: "${{ secrets.SMTPSERVER__SERVER }}"

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: SonarQube Begin
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin \
        /d:sonar.host.url=${{ secrets.SONARQUBE_HOST }} \
        /d:sonar.login=${{ secrets.SONARQUBE_TOKEN }}

    - name: Build .NET
      run: dotnet build

    - name: Test with the dotnet CLI
      run: dotnet test
      env:
        ASPNETCORE_ENVIRONMENT: Development

    - name: SonarQube End
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONARQUBE_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
