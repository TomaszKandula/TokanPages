name: Build, test and publish (master)

on:
  push:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Semantic Release (install node.js)
      uses: actions/setup-node@v1
      with:
        node-version: 14
    
    - name: Semantic Release (install dependencies)
      run: | 
        npm install --global yarn
        yarn install

    - name: Semantic Release (process changes)
      uses: cycjimmy/semantic-release-action@v2
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
    
    - name: Variable substitution appsettings file for Staging (NET Core)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/TokanPages/appsettings.Staging.json
      env:
        AzureStorage.BaseUrl: "${{ secrets.AZURESTORAGE__BASEURL_TEST }}"
        AzureStorage.ContainerName: "${{ secrets.AZURESTORAGE__CONTAINERNAME_TEST }}"
        AzureStorage.ConnectionString: "${{ secrets.AZURESTORAGE__CONNECTIONSTRING }}"
        Sentry.Dsn: "${{ secrets.SENTRY__DSN_TEST }}"
        ConnectionStrings.DbConnectTest: "${{ secrets.CONNECTIONSTRING__TEST }}"
        SmtpServer.Account: "${{ secrets.SMTPSERVER__ACCOUNT }}"
        SmtpServer.Password: "${{ secrets.SMTPSERVER__PASSWORD }}"
        SmtpServer.Port: "${{ secrets.SMTPSERVER__PORT }}"
        SmtpServer.Server: "${{ secrets.SMTPSERVER__SERVER }}"

    - name: Variable substitution appsettings file for Production (NET Core)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/TokanPages/appsettings.Production.json
      env:
        AppUrls.UpdateSubscriberPath: "${{ secrets.APPURLS__UPDATESUBSCRIBERPATH}}"
        AppUrls.UnsubscribePath: "${{ secrets.APPURLS__UNSUBSCRIBEPATH}}"
        AppUrls.DevelopmentOrigin: "${{ secrets.APPURLS__DEVELOPMENTORIGIN }}"
        AppUrls.DeploymentOrigin: "${{ secrets.APPURLS__DEPLOYMENTORIGIN }}"
        AzureStorage.BaseUrl: "${{ secrets.AZURESTORAGE__BASEURL }}"
        AzureStorage.ContainerName: "${{ secrets.AZURESTORAGE__CONTAINERNAME }}"
        AzureStorage.ConnectionString: "${{ secrets.AZURESTORAGE__CONNECTIONSTRING }}"
        Sentry.Dsn: "${{ secrets.SENTRY__DSN }}"
        ConnectionStrings.DbConnect: "${{ secrets.CONNECTIONSTRING__PROD }}"
        SmtpServer.Account: "${{ secrets.SMTPSERVER__ACCOUNT }}"
        SmtpServer.Password: "${{ secrets.SMTPSERVER__PASSWORD }}"
        SmtpServer.Port: "${{ secrets.SMTPSERVER__PORT }}"
        SmtpServer.Server: "${{ secrets.SMTPSERVER__SERVER }}"

    - name: Build Docker (prepare)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build Docker (execute with tests)
      run: | 
        BUILD_TIMESTAMP=$(date +"%Y-%m-%d at %T")
        echo Timestamp: $BUILD_TIMESTAMP
        docker build . \
        --build-arg "APP_VERSION=${{ steps.semantic.outputs.new_release_version }}" \
        --build-arg "APP_DATE_TIME=$BUILD_TIMESTAMP" \
        -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REGISTRY_USERNAME }}:${{ github.sha }}

    - name: Push Docker image (prepare)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Push Docker image (execute for new release only)
      if: steps.semantic.outputs.new_release_published == 'true'
      run: docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REGISTRY_USERNAME }}:${{ github.sha }}

    - name: Deploy to Azure Web App (for new release only)
      uses: azure/webapps-deploy@v2
      if: steps.semantic.outputs.new_release_published == 'true'
      with:
        app-name: tokanpages
        slot-name: production
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REGISTRY_USERNAME }}:${{ github.sha }}
