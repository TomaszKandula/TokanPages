name: Build, test and publish (stage)

on:
  push:
    branches: [ stage ]

jobs:

  frontend-staging:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2.2.0

    - name: Staging | Build Docker (prepare)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}
        username: ${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_SERVER_PASSWORD }}

    - name: Staging | Build Docker (execute with tests)
      run: |
        cd $PWD/TokanPages.ClientApp
        APP_VERSION="0.0.1-staging"
        BUILD_TIMESTAMP=$(date +"%Y-%m-%d at %T")
        docker build . \
        --build-arg "API_VERSION=${{ secrets.API_VERSION }}" \
        --build-arg "APP_VERSION=$APP_VERSION" \
        --build-arg "APP_DATE_TIME=$BUILD_TIMESTAMP" \
        --build-arg "APP_FRONTEND=${{ secrets.APP_FRONTEND_STAGING }}" \
        --build-arg "APP_BACKEND=${{ secrets.APP_BACKEND_STAGING }}" \
        --build-arg "ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS_STAGING }}" \
        -t ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:frontend-staging-${{ github.sha }}

    - name: Staging | Push Docker image (prepare)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}
        username: ${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_SERVER_PASSWORD }}

    - name: Staging | Push Docker image
      run: docker push ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:frontend-staging-${{ github.sha }}

    # NOTE: due to a budget constraints, we use separate Azure App Service for staging slots. 
    # Microsoft Azure pricing tiers B1, B2 and B3 do not allow separate slots.
    - name: Staging | Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: tokanpages-staging
        slot-name: production
        publish-profile: ${{ secrets.AZURE_PROFILE_FE_STAGE }}
        images: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:frontend-staging-${{ github.sha }}

  backend-staging:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2.2.0

    - task: AzureKeyVault@1
      inputs:
        azureSubscription: "${{ secrets.AZURE_SUBSCRIPTION }}"
        KeyVaultName: "${{ secrets.AZURE_KEY_VAULT }}"
        SecretsFilter: "*"
        RunAsPreJob: true

    - name: Variable substitution appsettings file for Staging (.NET)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/TokanPages.Configuration/appsettings.Staging.json
      env:
        Email_PrivateKey: "${{ StageEmailPrivateKey }}"
        Email_BaseUrl: "${{ StageEmailBaseUrl }}"
        Email_Address_Admin: "${{ StageEmailAddressesAdmin }}"
        Email_Address_Contact: "${{ StageEmailAddressesContact }}"
        Email_Address_Support: "${{ StageEmailAddressesItSupport }}"
        Db_DatabaseContext: "${{ StageDbConnect }}"
        Db_DatabaseContext_Migrator: "${{ StageDbMigrator }}"
        AZ_Storage_BaseUrl: "${{ StageAzStorageBaseUrl }}"
        AZ_Storage_ContainerName: "${{ StageAzStorageContainerName }}"
        AZ_Storage_ConnectionString: "${{ StageAzStorageConnectionString }}"
        AZ_Storage_MaxFileSizeUserMedia: "${{ StageAzStorageMaxFileSizeUserMedia }}"
        AZ_Storage_MaxFileSizeSingleAsset: "${{ StageAzStorageMaxFileSizeSingleAsset }}"
        AZ_Redis_InstanceName: "${{ StageAzRedisInstanceName }}"
        AZ_Redis_ConnectionString: "${{ StageAzRedisConnectionString }}"
        AZ_Redis_ExpirationMinute: "${{ StageAzRedisExpirationMinute }}"
        AZ_Redis_ExpirationSecond: "${{ StageAzRedisExpirationSecond }}"
        Paths_UpdateSubscriber: "${{ StagePathsUpdateSubscriber }}"
        Paths_Unsubscribe: "${{ StagePathsUnsubscribe }}"
        Paths_UpdatePassword: "${{ StagePathsUpdatePassword }}"
        Paths_Activation: "${{ StagePathsActivation }}"
        Paths_DevelopmentOrigin: "${{ StagePathsDevelopmentOrigin }}"
        Paths_DeploymentOrigin: "${{ StagePathsDeploymentOrigin }}"
        Paths_Templates_Newsletter: "${{ StagePathsNewsletter }}"
        Paths_Templates_ContactForm: "${{ StagePathsContactForm }}"
        Paths_Templates_ResetPassword: "${{ StagePathsResetPassword }}"
        Paths_Templates_RegisterForm: "${{ StagePathsRegisterForm }}"
        Ids_Issuer: "${{ StageIdsIssuer }}"
        Ids_Audience: "${{ StageIdsAudience }}"
        Ids_WebSecret: "${{ StageIdsWebSecret }}"
        Ids_RequireHttps: "${{ StageIdsRequireHttps }}"
        Ids_WebToken_Maturity: "${{ StageIdsWebTokenMaturity }}"
        Ids_RefreshToken_Maturity: "${{ StageIdsRefreshTokenMaturity }}"
        Limit_Reset_Maturity: "${{ StageLimitsResetMaturity }}"
        Limit_Activation_Maturity: "${{ StageLimitsActivationMaturity }}"
        Limit_Likes_Anonymous: "${{ StageLimitsLikesAnonymous }}"
        Limit_Likes_User: "${{ StageLimitsLikesUser }}"

    - name: Staging | Build Docker (prepare)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}
        username: ${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_SERVER_PASSWORD }}

    - name: Staging | Build Docker (execute with tests)
      run: |
        docker build . \
        --build-arg "ENV_VALUE=Staging" \
        -t ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:backend-staging-${{ github.sha }}

    - name: Staging | Push Docker image (prepare)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}
        username: ${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_SERVER_PASSWORD }}

    - name: Staging | Push Docker image
      run: docker push ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:backend-staging-${{ github.sha }}

    # NOTE: due to a budget constraints, we use separate Azure App Service for staging slots. 
    # Microsoft Azure pricing tiers B1, B2 and B3 do not allow separate slots.
    - name: Staging | Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: tokanpages-backend-staging
        slot-name: production
        publish-profile: ${{ secrets.AZURE_PROFILE_BE_STAGE }}
        images: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:backend-staging-${{ github.sha }}
