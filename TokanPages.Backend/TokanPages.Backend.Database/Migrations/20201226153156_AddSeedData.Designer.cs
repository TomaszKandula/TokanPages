// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TokanPages.Backend.Database;

namespace TokanPages.Backend.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201226153156_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TokanPages.Backend.Domain.Entities.Articles", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("ReadCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("731a6665-1c80-44e5-af6e-4d8331efe028"),
                            CreatedAt = new DateTime(2020, 1, 10, 12, 15, 15, 0, DateTimeKind.Unspecified),
                            Description = "No JAVA needed anymore...",
                            IsPublished = false,
                            Likes = 0,
                            ReadCount = 0,
                            Title = "Why C# is great?"
                        },
                        new
                        {
                            Id = new Guid("7494688a-994c-4905-9073-8c68811ec839"),
                            CreatedAt = new DateTime(2020, 1, 25, 5, 9, 19, 0, DateTimeKind.Unspecified),
                            Description = "Use C# for everything...",
                            IsPublished = false,
                            Likes = 0,
                            ReadCount = 0,
                            Title = "Say goodbay to PHP"
                        },
                        new
                        {
                            Id = new Guid("f6493f03-0e85-466c-970b-6f1a07001173"),
                            CreatedAt = new DateTime(2020, 9, 12, 22, 1, 33, 0, DateTimeKind.Unspecified),
                            Description = "Deep dive...",
                            IsPublished = false,
                            Likes = 0,
                            ReadCount = 0,
                            Title = "Records in C# 9.0"
                        });
                });

            modelBuilder.Entity("TokanPages.Backend.Domain.Entities.Subscribers", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subscribers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("098a9c38-c31d-4a29-b5a7-5d02a1a1f7ae"),
                            Count = 0,
                            Email = "ester1990@gmail.com",
                            IsActivated = false,
                            Registered = new DateTime(2020, 1, 10, 12, 15, 15, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ec8dd29c-464c-4e7a-897c-ce0ace2619ec"),
                            Count = 0,
                            Email = "tokan@dfds.com",
                            IsActivated = false,
                            Registered = new DateTime(2020, 1, 25, 5, 9, 19, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8a40f1b0-f983-4e51-9bfe-aeb5a5aee1bf"),
                            Count = 0,
                            Email = "admin@tomkandula.com",
                            IsActivated = false,
                            Registered = new DateTime(2020, 9, 12, 22, 1, 33, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TokanPages.Backend.Domain.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogged")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08be222f-dfcd-42db-8509-fd78ef09b912"),
                            EmailAddress = "ester.exposito@gmail.com",
                            FirstName = "Ester",
                            IsActivated = true,
                            LastLogged = new DateTime(2020, 1, 10, 15, 0, 33, 0, DateTimeKind.Unspecified),
                            LastName = "Exposito",
                            Registered = new DateTime(2020, 1, 10, 12, 15, 15, 0, DateTimeKind.Unspecified),
                            UserAlias = "ester"
                        },
                        new
                        {
                            Id = new Guid("d6365db3-d464-4146-857b-d8476f46553c"),
                            EmailAddress = "tokan@dfds.com",
                            FirstName = "Tom",
                            IsActivated = true,
                            LastLogged = new DateTime(2020, 3, 22, 12, 0, 15, 0, DateTimeKind.Unspecified),
                            LastName = "Tom",
                            LastUpdated = new DateTime(2020, 5, 21, 5, 9, 11, 0, DateTimeKind.Unspecified),
                            Registered = new DateTime(2020, 1, 25, 5, 9, 19, 0, DateTimeKind.Unspecified),
                            UserAlias = "tokan"
                        },
                        new
                        {
                            Id = new Guid("3d047a17-9865-47f1-acb3-53b08539e7c9"),
                            EmailAddress = "dummy@dummy.net",
                            FirstName = "Dummy",
                            IsActivated = true,
                            LastLogged = new DateTime(2020, 5, 12, 15, 5, 3, 0, DateTimeKind.Unspecified),
                            LastName = "Dummy",
                            Registered = new DateTime(2020, 9, 12, 22, 1, 33, 0, DateTimeKind.Unspecified),
                            UserAlias = "dummy"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
