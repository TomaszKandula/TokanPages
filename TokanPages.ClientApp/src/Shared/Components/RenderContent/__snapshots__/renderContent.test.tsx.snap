// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test render function 'renderContent' should correctly render passed items. 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body />,
  "container": <div />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test render function 'renderContent' should return 'Cannot render content.' when called with empty array of items. 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body />,
  "container": <div />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test render function 'renderContent' should return 'Cannot render content.' when called with items undefined. 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        Cannot render content.
      </div>
    </div>
    <div>
      <div>
        Cannot render content.
      </div>
    </div>
    <div>
      <p
        class="render-text-common render-text-title mt-56 mb-8"
      >
        &lt;p&gt;Test line&lt;/p&gt;
      </p>
      <p
        class="render-text-common render-text-sub-title mt-8 mb-40"
      >
        &lt;p&gt;Test line&lt;/p&gt;
      </p>
      <div
        class="MuiPaper-root MuiCard-root render-image-card MuiPaper-elevation3 MuiPaper-rounded"
      >
        <img
          alt="An image of presented article text"
          class="MuiCardMedia-root lazyloaded MuiCardMedia-media MuiCardMedia-img"
          loading="lazy"
          src="http://localhost:5000/api/v1image.jpg"
          title="Illustration"
        />
      </div>
      <p
        class="render-text-common render-text-paragraph custom-drop-cap"
      >
        &lt;p&gt;Test line&lt;/p&gt;
      </p>
      <p
        class="render-text-common render-text-paragraph"
      >
        &lt;p&gt;Test line&lt;/p&gt;
      </p>
      <div
        class="render-separator"
      >
        <span
          class="render-separator-span"
        />
        <span
          class="render-separator-span"
        />
        <span
          class="render-separator-span"
        />
      </div>
      <div
        class="MuiPaper-root MuiTableContainer-root MuiPaper-elevation1 MuiPaper-rounded"
      >
        <table
          aria-label="table"
          class="MuiTable-root render-table"
        >
          <thead
            class="MuiTableHead-root"
          >
            <tr
              class="MuiTableRow-root MuiTableRow-head"
            >
              <th
                class="MuiTableCell-root MuiTableCell-head render-table-head"
                scope="col"
              />
              <th
                class="MuiTableCell-root MuiTableCell-head render-table-head"
                scope="col"
              >
                Header line
              </th>
              <th
                class="MuiTableCell-root MuiTableCell-head render-table-head"
                scope="col"
              >
                Header line
              </th>
            </tr>
          </thead>
          <tbody
            class="MuiTableBody-root"
          >
            <tr
              class="MuiTableRow-root render-table-row"
            >
              <th
                class="MuiTableCell-root MuiTableCell-body render-table-header"
                role="cell"
                scope="row"
              >
                1
              </th>
              <td
                class="MuiTableCell-root MuiTableCell-body render-table-cell"
                role="cell"
                scope="row"
              >
                value
              </td>
              <td
                class="MuiTableCell-root MuiTableCell-body render-table-cell"
                role="cell"
                scope="row"
              >
                value
              </td>
            </tr>
            <tr
              class="MuiTableRow-root render-table-row"
            >
              <th
                class="MuiTableCell-root MuiTableCell-body render-table-header"
                role="cell"
                scope="row"
              >
                2
              </th>
              <td
                class="MuiTableCell-root MuiTableCell-body render-table-cell"
                role="cell"
                scope="row"
              >
                value
              </td>
              <td
                class="MuiTableCell-root MuiTableCell-body render-table-cell"
                role="cell"
                scope="row"
              >
                value
              </td>
            </tr>
            <tr
              class="MuiTableRow-root render-table-row"
            >
              <th
                class="MuiTableCell-root MuiTableCell-body render-table-header"
                role="cell"
                scope="row"
              >
                3
              </th>
              <td
                class="MuiTableCell-root MuiTableCell-body render-table-cell"
                role="cell"
                scope="row"
              >
                value
              </td>
              <td
                class="MuiTableCell-root MuiTableCell-body render-table-cell"
                role="cell"
                scope="row"
              >
                value
              </td>
            </tr>
            <tr
              class="MuiTableRow-root render-table-row"
            >
              <th
                class="MuiTableCell-root MuiTableCell-body render-table-header"
                role="cell"
                scope="row"
              >
                4
              </th>
              <td
                class="MuiTableCell-root MuiTableCell-body render-table-cell"
                role="cell"
                scope="row"
              >
                value
              </td>
              <td
                class="MuiTableCell-root MuiTableCell-body render-table-cell"
                role="cell"
                scope="row"
              >
                value
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <div
        class="MuiPaper-root MuiCard-root render-video-card MuiPaper-elevation3 MuiPaper-rounded"
      >
        <img
          alt="Video related to the presented article text"
          class="MuiCardMedia-root render-video-image lazyloaded MuiCardMedia-media MuiCardMedia-img"
          loading="lazy"
          src="http://localhost:5000/api/v1cheers-commercial.png"
          title="Video"
        />
        <div
          class="MuiCardContent-root"
        >
          <span
            class="MuiTypography-root render-video-text MuiTypography-body1"
          >
            Video
          </span>
        </div>
      </div>
      <div>
        Unknown element.
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      Cannot render content.
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
